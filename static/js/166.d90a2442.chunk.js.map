{"version":3,"file":"static/js/166.d90a2442.chunk.js","mappings":"sPACA,GAAgB,YAAc,uCAAuC,eAAiB,0CAA0C,kBAAoB,6CAA6C,iBAAmB,4CAA4C,gBAAkB,4C,SC8BlR,EA3B0B,SAAC,GAAmD,IAAjDA,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAG3D,OACE,gBAAIC,UAAWC,EAAAA,YAAf,WACE,iBAAKD,UAAWC,EAAAA,gBAAhB,WACE,gBACED,UAAWC,EAAAA,kBACXC,MAAO,GACPC,IACEN,EAAcO,aACdP,EAAcO,YAAYC,SAAS,SAC/BR,EAAcO,YAAYE,UAAU,GAX/BC,uCAcXC,IAAI,MAEN,cAAGR,UAAWC,EAAAA,aAAd,SAAiCL,QAEnC,iBAAKI,UAAWC,EAAAA,eAAhB,WACE,cAAGD,UAAWC,EAAAA,iBAAd,SAAqCF,EAAUU,MAAM,EAAG,OACxD,uBAAIX,SAIX,EC5BD,EAA8B,mCCyC9B,EAlCsB,WACpB,OAAsCY,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,gHAELC,EAAAA,EAAAA,IAAeJ,GAFV,OAElBK,EAFkB,OAIxBN,EAAeM,EAAKC,SAJI,gDAKfC,EALe,KAKfA,SACTC,QAAQC,IAAIF,EAASF,KAAKK,SANF,qGAAH,qDAWzBP,GACD,GAAE,CAACH,IAEJ,IAAMW,EAAQ,OAAGb,QAAH,IAAGA,OAAH,EAAGA,EAAac,KAC5B,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgB/B,EAAvB,EAAuBA,OAAQgC,EAA/B,EAA+BA,WAAY9B,EAA3C,EAA2CA,QAA3C,OACE,SAAC,EAAD,CAEEF,OAAQA,EACRC,cAAe8B,EACf7B,QAASA,EACTC,UAAW6B,GAJNF,EAFT,IAWF,OAAO,eAAI1B,UAAWC,EAAf,SAAiCuB,GACzC,C,sLCrCKK,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,eAAe,KAONC,EAAa,mCAAG,4FACT,MACC,MAFQ,SAGJP,EAASQ,IAAT,oBAFL,MAEK,YADJ,QAFQ,uBAGnBnB,EAHmB,EAGnBA,KAHmB,kBAKpBA,GALoB,2CAAH,qDAQboB,EAAY,mCAAG,WAAMZ,GAAN,yFACHG,EAASQ,IAAT,iBAAuBX,IADpB,uBAClBR,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZqB,EAAW,mCAAG,WAAOC,EAAaC,GAApB,yFACFZ,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CACNU,MAAOF,EACPC,KAAAA,KAJqB,uBACjBvB,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,wDAUXyB,EAAY,mCAAG,WAAMjB,GAAN,yFACHG,EAASQ,IAAT,iBAAuBX,EAAvB,aADG,uBAClBR,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZD,EAAc,mCAAG,WAAOS,EAAIe,GAAX,yFACLZ,EAASQ,IAAT,iBAAuBX,EAAvB,YAAqC,CAC1DM,OAAQ,CACNS,KAAAA,KAHwB,uBACpBvB,EADoB,EACpBA,KAKRG,QAAQC,IAAIJ,GANgB,kBAOrBA,GAPqB,2CAAH,uD","sources":["webpack://goit-react-hw-05-movies/./src/pages/ReviewsMovies/ReviewsMoviesItem/ReviewsMoviesItem.module.css?5428","pages/ReviewsMovies/ReviewsMoviesItem/ReviewsMoviesItem.jsx","webpack://goit-react-hw-05-movies/./src/pages/ReviewsMovies/ReviewsMovies.module.css?bd71","pages/ReviewsMovies/ReviewsMovies.jsx","services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsItem\":\"ReviewsMoviesItem_reviewsItem__07eHG\",\"contentWrapper\":\"ReviewsMoviesItem_contentWrapper__Y4m-I\",\"reviewsUserAvatar\":\"ReviewsMoviesItem_reviewsUserAvatar__jbsoo\",\"reviewsCreatedAt\":\"ReviewsMoviesItem_reviewsCreatedAt__My9lE\",\"reviewsUserInfo\":\"ReviewsMoviesItem_reviewsUserInfo__HlxOi\"};","// import PropTypes from 'prop-types';\n\nimport css from './ReviewsMoviesItem.module.css';\n\nconst ReviewsMoviesItem = ({ author, authorDetails, content, createdAt }) => {\n  const defaultImg = process.env.PUBLIC_URL + '/avatar.jpg ';\n  \n  return (\n    <li className={css.reviewsItem}>\n      <div className={css.reviewsUserInfo}>\n        <img\n          className={css.reviewsUserAvatar}\n          width={80}\n          src={\n            authorDetails.avatar_path &&\n            authorDetails.avatar_path.includes('https')\n              ? authorDetails.avatar_path.substring(1)\n              : defaultImg\n          }\n          alt=\"\"\n        />\n        <p className={css.reviewsAutor}>{author}</p>\n      </div>\n      <div className={css.contentWrapper}>\n        <p className={css.reviewsCreatedAt}>{createdAt.slice(0, 10)}</p>\n        <p>{content}</p>\n      </div>\n    </li>\n  );\n};\n\nexport default ReviewsMoviesItem;\n\n// CastMovieItem.defaultProps = {};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"ReviewsMovies_reviewsList__9KMF+\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReview } from 'services/movieAPI';\nimport ReviewsMoviesItem from './ReviewsMoviesItem/ReviewsMoviesItem';\n\nimport css from './ReviewsMovies.module.css';\n\nconst ReviewsMovies = () => {\n  const [reviewMovie, setReviewMovie] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchGetMovieReview = async () => {\n      try {\n        const data = await getMovieReview(movieId);\n\n        setReviewMovie(data.results);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      } finally {\n        //   setLoading(false);\n      }\n    };\n    fetchGetMovieReview();\n  }, [movieId]);\n\n  const elements = reviewMovie?.map(\n    ({ id, author_details, author, created_at, content }) => (\n      <ReviewsMoviesItem\n        key={id}\n        author={author}\n        authorDetails={author_details}\n        content={content}\n        createdAt={created_at}\n      />\n    )\n  );\n\n  return <ul className={css.reviewsList}>{elements}</ul>;\n};\n\nexport default ReviewsMovies;\n","import axios from 'axios';\n// import PropTypes from 'prop-types';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'b331236c37988e13f653df9937f18de4',\n    language: 'en-US',\n    include_adult: false,\n    // total_results: 10,\n    // total_pages: 10,\n    // per_page: 12,\n  },\n});\n\nexport const trendingMovie = async () => {\n  const mediaType = 'all';\n  const timeWindow = 'day';\n  const { data } = await instance.get(`/trending/${mediaType}/${timeWindow}`);\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const searchMovie = async (searchQuery, page) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: searchQuery,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async (id, page) => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      page,\n    },\n  });\n  console.log(data);\n  return data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\n// searchQueryImg.propTypes = {\n//   searchQuery: PropTypes.string.isRequired,\n// };\n\n// export default trendingMovie;\n"],"names":["author","authorDetails","content","createdAt","className","css","width","src","avatar_path","includes","substring","process","alt","slice","useState","reviewMovie","setReviewMovie","movieId","useParams","useEffect","fetchGetMovieReview","getMovieReview","data","results","response","console","log","message","elements","map","id","author_details","created_at","instance","axios","baseURL","params","api_key","language","include_adult","trendingMovie","get","getMovieById","searchMovie","searchQuery","page","query","getMovieCast"],"sourceRoot":""}