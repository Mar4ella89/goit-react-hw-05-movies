{"version":3,"file":"static/js/845.3b4628b4.chunk.js","mappings":"sPACA,EAA2B,gCAA3B,EAA2E,0CAA3E,EAA2H,gC,SCuB3H,EApBsB,SAAC,GAAsC,IAApCA,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAE1C,OACE,gBAAIC,UAAWC,EAAf,WACE,gBACEC,IACEJ,EAAW,yCAC2BA,GAN3BK,qCASbC,IAAKP,EACLQ,QAAQ,UAGV,eAAIL,UAAWC,EAAf,SAA8BJ,KAC9B,cAAGG,UAAWC,EAAd,SAAkCF,MAGvC,ECrBD,EAA2B,4BCuC3B,EAhCkB,WAChB,OAAkCO,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gHAEHC,EAAAA,EAAAA,IAAaJ,GAFV,OAEhBK,EAFgB,OAGtBN,EAAaM,EAAKC,MAHI,gDAIbC,EAJa,KAIbA,SACTC,QAAQC,IAAIF,EAASF,KAAKK,SALJ,qGAAH,qDAUvBP,GACD,GAAE,CAACH,IAEJ,IAAMW,EAAQ,OAAGb,QAAH,IAAGA,OAAH,EAAGA,EAAWc,KAC1B,gBAAGC,EAAH,EAAGA,QAASvB,EAAZ,EAAYA,UAAWF,EAAvB,EAAuBA,KAAM0B,EAA7B,EAA6BA,cAAeC,EAA5C,EAA4CA,aAA5C,OACE,SAAC,EAAD,CAEE3B,KAAI,OAAEA,QAAF,IAAEA,EAAAA,EAAQ0B,EACdzB,YAAa0B,EACbzB,UAAWA,GAHNuB,EAFT,IAUF,OAAO,eAAItB,UAAWC,EAAf,SAA8BmB,GACtC,C,sLCnCKK,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,eAAe,KAONC,EAAa,mCAAG,4FACT,MACC,MAFQ,SAGJP,EAASQ,IAAT,oBAFL,MAEK,YADJ,QAFQ,uBAGnBnB,EAHmB,EAGnBA,KAHmB,kBAKpBA,GALoB,2CAAH,qDAQboB,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASQ,IAAT,iBAAuBE,IADpB,uBAClBrB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZsB,EAAW,mCAAG,WAAOC,EAAaC,GAApB,yFACFb,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CACNW,MAAOF,EACPC,KAAAA,KAJqB,uBACjBxB,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,wDAUXD,EAAY,mCAAG,WAAMsB,GAAN,yFACHV,EAASQ,IAAT,iBAAuBE,EAAvB,aADG,uBAClBrB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZ0B,EAAc,mCAAG,WAAOL,EAAIG,GAAX,yFACLb,EAASQ,IAAT,iBAAuBE,EAAvB,YAAqC,CAC1DP,OAAQ,CACNU,KAAAA,KAHwB,uBACpBxB,EADoB,EACpBA,KAKRG,QAAQC,IAAIJ,GANgB,kBAOrBA,GAPqB,2CAAH,uD","sources":["webpack://goit-react-hw-05-movies/./src/pages/CastMovie/CastMovieItem/CastMovieItem.module.css?7153","pages/CastMovie/CastMovieItem/CastMovieItem.jsx","webpack://goit-react-hw-05-movies/./src/pages/CastMovie/CastMovie.module.css?30b1","pages/CastMovie/CastMovie.jsx","services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"itemName\":\"CastMovieItem_itemName__4sz9k\",\"itemСharacter\":\"CastMovieItem_itemСharacter__DyZyO\",\"castItem\":\"CastMovieItem_castItem__sWVqn\"};","// import PropTypes from 'prop-types';\n\nimport css from './CastMovieItem.module.css';\n\nconst CastMovieItem = ({ name, profilePath, character }) => {\n  const defaultImg = process.env.PUBLIC_URL + '/cast.jpg ';\n  return (\n    <li className={css.castItem}>\n      <img\n        src={\n          profilePath\n            ? `https://image.tmdb.org/t/p/w185${profilePath}`\n            : defaultImg\n        }\n        alt={name}\n        loading=\"lazy\"\n      />\n\n      <h3 className={css.itemName}>{name}</h3>\n      <p className={css.itemСharacter}>{character}</p>\n    </li>\n  );\n};\n\nexport default CastMovieItem;\n\n// CastMovieItem.defaultProps = {};\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastMovie_castList__wNWYL\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCast } from 'services/movieAPI';\nimport CastMovieItem from './CastMovieItem/CastMovieItem';\n\nimport css from './CastMovie.module.css';\n\nconst CastMovie = () => {\n  const [castMovie, setCastMovie] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchGetMovieCast = async () => {\n      try {\n        const data = await getMovieCast(movieId);\n        setCastMovie(data.cast);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      } finally {\n        //   setLoading(false);\n      }\n    };\n    fetchGetMovieCast();\n  }, [movieId]);\n\n  const elements = castMovie?.map(\n    ({ cast_id, character, name, original_name, profile_path }) => (\n      <CastMovieItem\n        key={cast_id}\n        name={name ?? original_name}\n        profilePath={profile_path}\n        character={character}\n      />\n    )\n  );\n\n  return <ul className={css.castList}>{elements}</ul>;\n};\n\nexport default CastMovie;\n","import axios from 'axios';\n// import PropTypes from 'prop-types';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'b331236c37988e13f653df9937f18de4',\n    language: 'en-US',\n    include_adult: false,\n    // total_results: 10,\n    // total_pages: 10,\n    // per_page: 12,\n  },\n});\n\nexport const trendingMovie = async () => {\n  const mediaType = 'all';\n  const timeWindow = 'day';\n  const { data } = await instance.get(`/trending/${mediaType}/${timeWindow}`);\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const searchMovie = async (searchQuery, page) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: searchQuery,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async (id, page) => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      page,\n    },\n  });\n  console.log(data);\n  return data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\n// searchQueryImg.propTypes = {\n//   searchQuery: PropTypes.string.isRequired,\n// };\n\n// export default trendingMovie;\n"],"names":["name","profilePath","character","className","css","src","process","alt","loading","useState","castMovie","setCastMovie","movieId","useParams","useEffect","fetchGetMovieCast","getMovieCast","data","cast","response","console","log","message","elements","map","cast_id","original_name","profile_path","instance","axios","baseURL","params","api_key","language","include_adult","trendingMovie","get","getMovieById","id","searchMovie","searchQuery","page","query","getMovieReview"],"sourceRoot":""}