{"version":3,"file":"static/js/674.a3392844.chunk.js","mappings":"2LACA,GAAgB,mBAAqB,0CAA0C,SAAW,gCAAgC,aAAe,qC,SCyCzI,EArCsB,SAAC,GAAmD,IAAjDA,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAEhDC,GAAWC,EAAAA,EAAAA,MACf,OACE,SAAC,KAAD,CAAMC,GAAE,kBAAaN,GAAWO,MAAO,CAACC,KAAMJ,GAA9C,UACE,gBAAIK,UAAWC,EAAAA,cAAf,WACE,0BACE,gBAAKD,UAAWC,EAAAA,aACdC,MAAO,IACPC,OAAQ,IACRC,IACEX,EAAW,yCAC2BA,GAX1BY,sCAcdC,IAAKd,EACLe,QAAQ,YAGZ,gBAAKP,UAAWC,EAAAA,mBAAhB,UACE,0BACE,0BAAOT,EAAMgB,iBACb,iBAAMR,UAAWC,EAAAA,SAAjB,SAAgCP,EAAae,MAAM,EAAG,cAMjE,EChCD,EAAgC,qCCiChC,EA7BsB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACvBC,QAAQC,IAAIF,GACZ,IAAMG,EAAWH,EAAWI,KAC1B,gBAAGC,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,MAAOwB,EAAd,EAAcA,KAAMvB,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,aAAcuB,EAA/C,EAA+CA,eAA/C,OACE,SAAC,EAAD,CAEE1B,QAASwB,EACTvB,MAAK,OAAEA,QAAF,IAAEA,EAAAA,EAASwB,EAChBvB,YAAaA,EACbC,aAAY,OAAEA,QAAF,IAAEA,EAAAA,EAAgBuB,GAJzBF,EAFT,IAUF,OAAO,eAAIf,UAAWC,EAAf,SAAmCY,GAC3C,C,sIClBD,EAAgC,gC,SC+ChC,EAxCiB,WACf,OAAoCK,EAAAA,EAAAA,UAAS,IAA7C,eAAOR,EAAP,KAAmBS,EAAnB,KA+BA,OA5BAC,EAAAA,EAAAA,YAAU,WAKR,IAAMC,EAAmB,mCAAG,8GAGLC,EAAAA,EAAAA,MAHK,OAGlBC,EAHkB,OAKxBZ,QAAQC,IAAIW,EAAKC,SAOjBL,EAAcI,EAAKC,SAZK,qJAAH,qDAoBzBH,GACD,GAAE,KAGD,iCACE,eAAIrB,UAAWC,EAAf,6BACA,SAACwB,EAAA,EAAD,CAAef,WAAYA,MAGhC,C,sLC3CKgB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,QACVC,eAAe,KAONV,EAAa,mCAAG,4FACT,MACC,MAFQ,SAGJI,EAASO,IAAT,oBAFL,MAEK,YADJ,QAFQ,uBAGnBV,EAHmB,EAGnBA,KAHmB,kBAKpBA,GALoB,2CAAH,qDAQbW,EAAY,mCAAG,WAAMnB,GAAN,yFACHW,EAASO,IAAT,iBAAuBlB,IADpB,uBAClBQ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZY,EAAW,mCAAG,WAAOC,EAAaC,GAApB,yFACFX,EAASO,IAAT,gBAA8B,CACnDJ,OAAQ,CACNS,MAAOF,EACPC,KAAAA,KAJqB,uBACjBd,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,wDAUXgB,EAAY,mCAAG,WAAMxB,GAAN,yFACHW,EAASO,IAAT,iBAAuBlB,EAAvB,aADG,uBAClBQ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZiB,EAAc,mCAAG,WAAOzB,EAAIsB,GAAX,yFACLX,EAASO,IAAT,iBAAuBlB,EAAvB,YAAqC,CAC1Dc,OAAQ,CACNQ,KAAAA,KAHwB,uBACpBd,EADoB,EACpBA,KAKRZ,QAAQC,IAAIW,GANgB,kBAOrBA,GAPqB,2CAAH,uD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCardList/MovieCardItem/MovieCardItem.module.css?71a3","components/MovieCardList/MovieCardItem/MovieCardItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieCardList/MovieCardList.module.css?83f9","components/MovieCardList/MovieCardList.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieCardItemTitle\":\"MovieCardItem_movieCardItemTitle__0FqL6\",\"cardYear\":\"MovieCardItem_cardYear__eOznR\",\"movieCardImg\":\"MovieCardItem_movieCardImg__7rlwr\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport css from './MovieCardItem.module.css';\n\nconst MovieCardItem = ({ movieId, title, poster_path, release_date }) => {\n  const defaultImgMovie = process.env.PUBLIC_URL + '/movie.jpg ';\nconst location = useLocation();\n  return (\n    <Link to={`/movies/${movieId}`} state={{from: location}}>\n      <li className={css.movieCardItem}>\n        <div>\n          <img className={css.movieCardImg}\n            width={355}\n            height={532}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w400${poster_path}`\n                : defaultImgMovie\n            }\n            alt={title}\n            loading=\"lazy\"\n          />\n        </div>\n        <div className={css.movieCardItemTitle}>\n          <p>\n            <span>{title.toUpperCase()}</span>\n            <span className={css.cardYear}>{release_date.slice(0, 4)}</span>\n          </p>\n        </div>\n      </li>\n    </Link>\n  );\n};\n\nMovieCardItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string.isRequired,\n  movieId: PropTypes.number.isRequired,\n};\n\nexport default MovieCardItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieCardList\":\"MovieCardList_movieCardList__nTNS1\"};","import MovieCardItem from './MovieCardItem/MovieCardItem';\nimport PropTypes from 'prop-types';\n\nimport css from './MovieCardList.module.css';\n\nconst MovieCardList = ({ movieItems }) => {\n  console.log(movieItems);\n  const elements = movieItems.map(\n    ({ id, title, name, poster_path, release_date, first_air_date }) => (\n      <MovieCardItem\n        key={id}\n        movieId={id}\n        title={title ?? name}\n        poster_path={poster_path}\n        release_date={release_date ?? first_air_date}\n      />\n    )\n  );\n  return <ul className={css.movieCardList}>{elements}</ul>;\n};\n\nMovieCardList.propTypes = {\n  movieItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n      release_date: PropTypes.string,\n      first_air_date: PropTypes.string,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieCardList;\n","// extracted by mini-css-extract-plugin\nexport default {\"HomePageTitle\":\"HomePage_HomePageTitle__twhoa\"};","import { trendingMovie } from 'services/movieAPI';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport MovieCardList from 'components/MovieCardList/MovieCardList';\n\nimport css from './HomePage.module.css';\n\nconst HomePage = () => {\n  const [movieItems, setMovieItems] = useState([]);\n  //   const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    //   if (!searchQuery) {\n    //     return;\n    //   }\n\n    const fetchTrendingMovies = async () => {\n      try {\n        //   setLoading(true);\n        const data = await trendingMovie();\n\n        console.log(data.results);\n\n        // setMoviesTranding(prevMoviesTranding => [\n        //   ...prevMoviesTranding,\n        //   ...data.results,\n        // ]);\n\n        setMovieItems(data.results);\n        //   setItems(prevItems => [...prevItems, ...data.hits]);\n      } catch (error) {\n        //   setError(error.message);\n      } finally {\n        //   setLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <h1 className={css.HomePageTitle}>Tranding today</h1>\n      <MovieCardList movieItems={movieItems} />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n// import PropTypes from 'prop-types';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'b331236c37988e13f653df9937f18de4',\n    language: 'en-US',\n    include_adult: false,\n    // total_results: 10,\n    // total_pages: 10,\n    // per_page: 12,\n  },\n});\n\nexport const trendingMovie = async () => {\n  const mediaType = 'all';\n  const timeWindow = 'day';\n  const { data } = await instance.get(`/trending/${mediaType}/${timeWindow}`);\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const searchMovie = async (searchQuery, page) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: searchQuery,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async (id, page) => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      page,\n    },\n  });\n  console.log(data);\n  return data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\n// searchQueryImg.propTypes = {\n//   searchQuery: PropTypes.string.isRequired,\n// };\n\n// export default trendingMovie;\n"],"names":["movieId","title","poster_path","release_date","location","useLocation","to","state","from","className","css","width","height","src","process","alt","loading","toUpperCase","slice","movieItems","console","log","elements","map","id","name","first_air_date","useState","setMovieItems","useEffect","fetchTrendingMovies","trendingMovie","data","results","MovieCardList","instance","axios","baseURL","params","api_key","language","include_adult","get","getMovieById","searchMovie","searchQuery","page","query","getMovieCast","getMovieReview"],"sourceRoot":""}