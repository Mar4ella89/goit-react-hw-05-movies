{"version":3,"file":"static/js/135.a909e7fd.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"wrapperImg\":\"MovieDetails_wrapperImg__c9k1t\",\"wrapperDetails\":\"MovieDetails_wrapperDetails__hvyOu\",\"wrapperVoits\":\"MovieDetails_wrapperVoits__NMCWC\",\"wrapperPopularity\":\"MovieDetails_wrapperPopularity__lDXpr\",\"wrapperTitle\":\"MovieDetails_wrapperTitle__kxb1f\",\"wrapperGenre\":\"MovieDetails_wrapperGenre__LS3xm\",\"about\":\"MovieDetails_about__8ZMko\",\"button\":\"MovieDetails_button__uXZxd\",\"addInfo\":\"MovieDetails_addInfo__lKFr+\",\"addInfoCast\":\"MovieDetails_addInfoCast__VXqQN\",\"addInfoReviews\":\"MovieDetails_addInfoReviews__PRYyf\"};","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  NavLink,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\n\nimport { getMovieById } from 'services/movieAPI';\n\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState();\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchGetMovieById = async () => {\n      try {\n        const data = await getMovieById(movieId);\n        setMovieDetails(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchGetMovieById();\n  }, [movieId]);\n\n  const defaultImgMovie = process.env.PUBLIC_URL + '/movie.jpg ';\n\n  return (\n    <div className={css.container}>\n      <button\n        className={css.button}\n        onClick={() => {\n          navigate(from);\n        }}\n      >\n        Go back\n      </button>\n      <div className={css.wrapper}>\n        <div className={css.wrapperImg}>\n          <img\n            src={\n              movieDetails?.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                : defaultImgMovie\n            }\n            alt={movieDetails?.title}\n          />\n        </div>\n        <div className={css.wrapperDetails}>\n          <h2>{movieDetails?.title.toUpperCase()}</h2>\n          <div>\n            <div className={css.wrapperVoits}>\n              <p>Vote / Votes</p>\n              <p>\n                <span>{movieDetails?.vote_average}</span>\n                <span> / </span>\n                <span>{movieDetails?.vote_count}</span>\n              </p>\n            </div>\n            <div className={css.wrapperPopularity}>\n              <p>Popularity</p>\n              <p>{movieDetails?.popularity}</p>\n            </div>\n            <div className={css.wrapperTitle}>\n              <p>Original Title</p>\n              <p>{movieDetails?.original_title.toUpperCase()}</p>\n            </div>\n            <div className={css.wrapperGenre}>\n              <p>Genre</p>\n              <p>{movieDetails?.genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </div>\n          <h3 className={css.about}>About</h3>\n          <p>{movieDetails?.overview}</p>\n        </div>\n      </div>\n      <h3 className={css.addInfo}>Additional information</h3>\n      <NavLink to=\"cast\" state={{ from }} className={css.addInfoCast}>\n        <p>Cast</p>\n      </NavLink>\n      <NavLink to=\"reviews\" state={{ from }} className={css.addInfoReviews}>\n        <p>Reviews</p>\n      </NavLink>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'b331236c37988e13f653df9937f18de4',\n    language: 'en-US',\n    include_adult: false,\n    \n  },\n});\n\nexport const trendingMovie = async () => {\n  const mediaType = 'all';\n  const timeWindow = 'day';\n  const { data } = await instance.get(`/trending/${mediaType}/${timeWindow}`);\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const searchMovie = async (searchQuery, page) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query: searchQuery,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async (id, page) => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      page,\n    },\n  });\n   return data;\n};\n\n\ngetMovieById.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nsearchMovie.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n  page: PropTypes.string.isRequired,\n};\n\ngetMovieCast.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\ngetMovieReview.propTypes = {\n  id: PropTypes.string.isRequired,\n  page: PropTypes.string.isRequired,\n};\n\n"],"names":["useState","movieDetails","setMovieDetails","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchGetMovieById","getMovieById","data","response","console","log","message","className","css","onClick","src","poster_path","process","alt","title","toUpperCase","vote_average","vote_count","popularity","original_title","genres","map","genre","name","join","overview","to","instance","axios","baseURL","params","api_key","language","include_adult","trendingMovie","get","id","searchMovie","searchQuery","page","query","getMovieCast","getMovieReview","propTypes","PropTypes"],"sourceRoot":""}